{"Typealiases.html#/s:8RxReduce7Reducera":{"name":"Reducer","abstract":"<p>A Reducer mutates an input state into an output state according to an action</p>"},"Typealiases.html#/s:8RxReduce10Middlewarea":{"name":"Middleware","abstract":"<p>A Middleware has not effect on the state, it us just triggered by a dispatch action</p>"},"Protocols/StoreType.html#/s:8RxReduce9StoreTypeP05StateD0":{"name":"StateType","abstract":"<p>A store is dedicated to the mutation/observation of this StateType</p>","parent_name":"StoreType"},"Protocols/StoreType.html#/s:8RxReduce9StoreTypeP5state0A5Cocoa14SharedSequenceVyAE21DriverSharingStrategyVqd__Gqd__05StateD0Qzc4from_tlF":{"name":"state(from:)","abstract":"<p>The current State or SubState (UI compliant)</p>","parent_name":"StoreType"},"Protocols/StoreType.html#/s:8RxReduce9StoreTypeP5state0A5Cocoa14SharedSequenceVyAE21DriverSharingStrategyVqd__Gqd__05StateD0Qzc4from_ts9EquatableRd__lF":{"name":"state(from:)","abstract":"<p>The current State or SubState (UI compliant), avoiding duplicate notifications in case of state equality</p>","parent_name":"StoreType"},"Protocols/StoreType.html#/s:8RxReduce9StoreTypePxs15ContiguousArrayVy05StateD0QzAGSg_AA6Action_ptcG12withReducers_AEyyAH_AaI_ptcGSg0I11Middlewarestcfc":{"name":"init(withReducers:withMiddlewares:)","abstract":"<p>Inits the Store with its reducers stack</p>","parent_name":"StoreType"},"Protocols/StoreType.html#/s:8RxReduce9StoreTypeP8dispatchyAA6Action_p6action_tF":{"name":"dispatch(action:)","abstract":"<p>Dispatch an action through the reducers to mutate the state</p>","parent_name":"StoreType"},"Protocols/Action.html#/s:8RxReduce6ActionP7toAsync0A5Swift10ObservableCyAaB_pGyF":{"name":"toAsync()","abstract":"<p>Convert the action into an Observable so it is compliant with asynchronous processing</p>","parent_name":"Action"},"Protocols/Action.html":{"name":"Action","abstract":"<p>Conform to an Action to mutate the State synchronously or asynchronously"},"Protocols.html#/s:8RxReduce5StateP":{"name":"State","abstract":"<p>Conform to the State protocol to be handled by a Store</p>"},"Protocols/StoreType.html":{"name":"StoreType","abstract":"<p>A Store holds the state, mutate the state through actions / reducers and exposes the state via a Driver"},"Extensions/Observable.html#/s:8RxReduce6ActionP7toAsync0A5Swift10ObservableCyAaB_pGyF":{"name":"toAsync()","parent_name":"Observable"},"Extensions/Array.html#/s:8RxReduce6ActionP7toAsync0A5Swift10ObservableCyAaB_pGyF":{"name":"toAsync()","parent_name":"Array"},"Extensions/Array.html":{"name":"Array"},"Extensions/Observable.html":{"name":"Observable"},"Classes/Store.html#/s:8RxReduce9StoreTypeP5state0A5Cocoa14SharedSequenceVyAE21DriverSharingStrategyVqd__Gqd__05StateD0Qzc4from_tlF":{"name":"state(from:)","parent_name":"Store"},"Classes/Store.html#/s:8RxReduce9StoreTypeP5state0A5Cocoa14SharedSequenceVyAE21DriverSharingStrategyVqd__Gqd__05StateD0Qzc4from_ts9EquatableRd__lF":{"name":"state(from:)","parent_name":"Store"},"Classes/Store.html#/s:8RxReduce9StoreTypePxs15ContiguousArrayVy05StateD0QzAGSg_AA6Action_ptcG12withReducers_AEyyAH_AaI_ptcGSg0I11Middlewarestcfc":{"name":"init(withReducers:withMiddlewares:)","parent_name":"Store"},"Classes/Store.html#/s:8RxReduce9StoreTypeP8dispatchyAA6Action_p6action_tF":{"name":"dispatch(action:)","parent_name":"Store"},"Classes/Store.html":{"name":"Store","abstract":"<p>A default store that will handle a specific kind of State</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}